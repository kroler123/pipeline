#!groovy
// Check properties
properties([disableConcurrentBuilds()])

pipeline {
	agent {
		label 'master'
	}
	options {
		buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
		timestamps()
		skipStagesAfterUnstable()
	}
	stages {
                stage("first step") {
                        steps {
				script {
					GET_SALON = sh (
						script: 'cat /home/kroler123/salon.txt',
						returnStdout: true
					).trim()
				}
				echo "Deploy backup server on salon ${GET_SALON} !"
                        }
                }
		stage("Second step") {
			steps {
                                script {
                                        GET_IP = sh (
                                                script: 'cat etc/ansible/group_vars/${GET_SALON}-PROXMOX | grep "ansible_host | awk \'{print $2}\'',
                                                returnStdout: true
                                        ).trim()
                                }
                                echo "Deploy backup server on salon ${GET_IP} !"

			}
		}
/**		stage("Three step") {
			steps {
				ansiblePlaybook(
					playbook: '/etc/ansible/playbook_ats_test.yml',
					inventory: '/etc/ansible/hosts',
					colorized: true
				)
			}
		}*/
	}
}
